# $Id: PKGBUILD 173130 2012-12-11 14:42:18Z jgc $
# Maintainer: Jan de Groot <jgc@archlinux.org>

pkgbase=gvfs
pkgname=('gvfs' 'gvfs-smb' 'gvfs-afc' 'gvfs-afp' 'gvfs-gphoto2' 'gvfs-obexftp')
pkgver=20130101
pkgrel=1
arch=('i686' 'x86_64')
license=('LGPL')
makedepends=(avahi bluez dbus-glib fuse intltool libarchive libcdio libgphoto2 libimobiledevice libsoup-gnome smbclient udisks2 libsecret docbook-xsl gtk3 gtk-doc gnome-common git)
url="http://www.gnome.org"
options=(!libtool)

_gitroot=git://git.gnome.org/gvfs
_gitname=gvfs

build() {
    cd $srcdir

    msg "Connecting to GIT server...."
    if [[ -d $_gitname/.git ]]; then
        pushd $_gitname && git pull
        msg2 "The local files are updated."
        popd
    else
        git clone $_gitroot
    fi
    msg2 "GIT checkout done or server timeout"

    rm -rf $_gitname-build/
    cp -r $_gitname/ $_gitname-build/
    cd $_gitname-build/

    msg "Building..."

  ./autogen.sh --prefix=/usr --sysconfdir=/etc \
      --localstatedir=/var --disable-static \
      --libexecdir=/usr/lib/gvfs \
      --with-bash-completion-dir=/usr/share/bash-completion/completions
  make
}

package_gvfs() {
  pkgdesc="Userspace virtual filesystem implemented as a pluggable module for gio"
  depends=('avahi' 'dconf' 'fuse' 'libarchive' 'libcdio' 'libsoup-gnome' 'udisks2' 'libsecret')
  optdepends=('gvfs-afc: AFC (mobile devices) support'
              'gvfs-smb: SMB/CIFS (Windows client) support'
              'gvfs-gphoto2: gphoto2 (PTP camera/MTP media player) support'
              'gvfs-obexftp: ObexFTP (bluetooth) support'
              'gvfs-afp: Apple Filing Protocol (AFP) support'
              'gtk3: Recent files support')
  install=gvfs.install

  cd $srcdir/$_gitname-build/
  sed -e 's/^am__append_4/#am__append_4/' \
      -e 's/^am__append_5/#am__append_5/' \
      -i monitor/Makefile
  make DESTDIR="$pkgdir" install

  cd "$pkgdir"
  rm usr/lib/gvfs/gvfsd-{smb,smb-browse,afc,afp,afp-browse,gphoto2,obexftp}
  rm usr/share/gvfs/mounts/{smb,smb-browse,afc,afp,afp-browse,gphoto2,obexftp}.mount
  rm usr/share/glib-2.0/schemas/org.gnome.system.smb.gschema.xml
  rm usr/share/GConf/gsettings/gvfs-smb.convert
}

package_gvfs-smb() {
  pkgdesc="SMB/CIFS (Windows client) backend for gvfs"
  depends=("gvfs=$pkgver" 'smbclient')
  install=gvfs-smb.install

  cd $srcdir/$_gitname-build/daemon
  install -m755 -d "$pkgdir/usr/lib/gvfs"
  install -m755 -d "$pkgdir/usr/share/gvfs/mounts"

  install -m755 .libs/gvfsd-smb{,-browse} "$pkgdir/usr/lib/gvfs/"
  install -m644 smb{,-browse}.mount "$pkgdir/usr/share/gvfs/mounts/"

  install -Dm644 org.gnome.system.smb.gschema.xml \
    "$pkgdir/usr/share/glib-2.0/schemas/org.gnome.system.smb.gschema.xml"
  install -Dm644 gvfs-smb.convert \
    "$pkgdir/usr/share/GConf/gsettings/gvfs-smb.convert"
}

package_gvfs-afc() {
  pkgdesc="AFC (mobile devices) backend for gvfs"
  depends=("gvfs=$pkgver" 'libimobiledevice')
  install=gvfs-module.install

  cd $srcdir/$_gitname-build/daemon
  install -D .libs/gvfsd-afc "$pkgdir/usr/lib/gvfs/gvfsd-afc"
  install -Dm644 afc.mount "$pkgdir/usr/share/gvfs/mounts/afc.mount"

  cd $srcdir/$_gitname-build/monitor/afc
  make DESTDIR="$pkgdir" install
}

package_gvfs-gphoto2() {
  pkgdesc="gphoto2 (PTP camera/MTP media player) backend for gvfs"
  depends=("gvfs=$pkgver" 'dbus-core' 'libgphoto2' 'udev')
  install=gvfs-module.install

  cd $srcdir/$_gitname-build/daemon
  install -D .libs/gvfsd-gphoto2 "$pkgdir/usr/lib/gvfs/gvfsd-gphoto2"
  install -Dm644 gphoto2.mount "$pkgdir/usr/share/gvfs/mounts/gphoto2.mount"

  cd $srcdir/$_gitname-build/monitor/gphoto2
  make DESTDIR="$pkgdir" install
}

package_gvfs-obexftp() {
  pkgdesc="ObexFTP (bluetooth) backend for gvfs"
  depends=("gvfs=$pkgver" 'dbus-glib' 'bluez' 'obex-data-server')
  install=gvfs-module.install

  cd $srcdir/$_gitname-build/daemon
  install -D .libs/gvfsd-obexftp "$pkgdir/usr/lib/gvfs/gvfsd-obexftp"
  install -Dm644 obexftp.mount "$pkgdir/usr/share/gvfs/mounts/obexftp.mount"
}

package_gvfs-afp() {
  pkgdesc="Apple Filing Protocol (AFP) backend for gvfs"
  depends=("gvfs=$pkgver")
  install=gvfs-module.install
  install -m755 -d "$pkgdir/usr/lib/gvfs"
  install -m755 -d "$pkgdir/usr/share/gvfs/mounts"

  cd $srcdir/$_gitname-build/daemon
  install -m755 .libs/gvfsd-afp{,-browse} "$pkgdir/usr/lib/gvfs/"
  install -m644 afp{,-browse}.mount "$pkgdir/usr/share/gvfs/mounts/"
}
